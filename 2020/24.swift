//
//  main.swift
//  Advent24
//
//  Created by altaibayar tseveenbayar on 2020-12-24.
//

import Foundation

let input_long = [
    "nweeseeeeswsweenw",
    "nwnwnwneswswnwnwwnwnwnwnwnenwsenwnwnwnenw",
    "wnewneswnweseneseseswnewnesweswwnene",
    "weswnwnwnwnwewswnwwsenwnwwwseewe",
    "wnesewwswwsewenewnwswswnwwewwne",
    "enweseseseneeseseseeswsese",
    "neenesenewswnenenenwneseneeneneneneewne",
    "swwnwswwsewswswnwseeseeenewewe",
    "seseseeseesewwsenesesenwnweeesesew",
    "neneeeneseseewnwseeswsenwwwenwswe",
    "eeeseesewnwseeeseeseswnwneswnwnee",
    "swesenwsesesenewnewsewnesese",
    "swsewwseeneswsewnesenwsene",
    "wseseseneenwnewnwwseeenewnwneenwse",
    "eeeeswweeseesewnwneeeenwee",
    "swseseseswseesesenwsesesenwenwseseseswsese",
    "eenwseswwswnwewwnwsenwenwwwneeww",
    "seswswswseseneswneswswswswsewneseneseswsw",
    "seswwseseseswseseswswseseseswswnwneesw",
    "enwenwnwswnwswenwneswneswnwnwnwnwnwnwnwne",
    "wwwwwwnewwneswwswwewwwww",
    "ewneeneswsesenesweeeeewseeewnw",
    "swsenesweseswseswseesewwswswnwnwsesesw",
    "nwenwseneseeswsenweneseeswnenw",
    "nwnwnwnwnwnwnwwnwnwnwsenwnw",
    "wsewwnwwwwsenenwewwswwnwwsewe",
    "wwwnwwwewewwwswswnweswnwnwwww",
    "eewesenenenwneeeeeseneee",
    "nwswnwewwweneneneswnenwneneenwwe",
    "neenwswseeeweeeseeswnwww",
    "nwseswsewwseseswenesenesenewswneswe",
    "ewnwnwnwnewnenweneeneneneseneneww",
    "nwnwnwsenwwwnwnwnw",
    "wswsenenwsenwwnewnenwnwnwnwnwnenwwsw",
    "eeeeeeeeeweeneesw",
    "nwewswwwnenwenwweswwswnwenwwnw",
    "swsenenweeeswswswswseswswwswnwwswenw",
    "newnesenenwseneseeneseewwnwnewsene",
    "newnwneswnwneesewnwwnwnwwnwnwwswwnw",
    "ewwswswswsewswnwewwswswswswswnwsew",
    "nwnwsewnenenwseseesene",
    "seseseswseseseeesesesewsenenesesenewse",
    "neewnewnenewwnwenwwnwenwneesenw",
    "sewnwnewsenenenwsesesewswseeeseseswse",
    "eswwsesesesenenewswwnesesewsesenese",
    "nwnwnwsenwswnwnewenwnwnwwsenw",
    "wenwswwwwwswewwswwwwwww",
    "enweeweneeeeneeeseeseeswwsew",
    "neseneneeneneneneneneneswnwwnenenenene",
    "eeneseneneeweeeeee",
    "nenwnwseenenwnwneswnwswnenenwnwnwswswnene",
    "nenenwnewnewseswnwnwneneneneesenenenenw",
    "ewwwwneswwsesewswswwswwnwswwsw",
    "neeneenenwswneneeeeneneeee",
    "sewwnwwnwnewsewwwwnwsenwww",
    "swswneseswswswswseswswswnwnwswenwnwnesesw",
    "wwwwnwewwwnwwswnwsenwwww",
    "wswewnwswseswwswseswwwnewwwnesww",
    "wneswseseswswswsesesenwseseneseswesesese",
    "nenweeswnwwnwneseswnwneeneseneswnwne",
    "nwnwswnwnwnenwswnwnwnwnenenwe",
    "eswesweenenwnweneeeeene",
    "nweewneneneneneneenesweseneenewse",
    "wwswswswswswnwwwswsew",
    "nenenenesenwnenwswnenwnenwnenenenenwnese",
    "wnwwwwwnwnesewnwwsewnwnwswnwww",
    "neneneneneswneswwnenenenenwnwseenenenese",
    "nwnwnenenenewnenewnwnwnesenwnwneseenene",
    "seenwnwsenwsenwnweswwwwwnwneneswsenw",
    "nwseweswwswwwwneswwnweenesewnwsww",
    "eeeeeeeesewenenweeseeenew",
    "sewwsewwwwwnwnwwwwnewwesenww",
    "sweeswweswenwsesesewnewwwseswesw",
    "swswswswesenwswwsweswswswsenweswnwsw",
    "nwneswnenwnwswnenwnwnwenenwnwnenwnw",
    "seswnwnwnwnwswwwewnwnwnenw",
    "wwnwnwwnwwneeswwwswwwwnwswenw",
    "neenwnwenwwnwnwswenenwwsweeswnwse",
    "nenewnewneneeswnesenwnenwnwesesewsw",
    "wswnwswwwwneseswneswswwwswseswnew",
    "nwnenweswnenwnwseneseswswnwswnwnenweswnw",
    "neneseswnenenenenwsenenenwnenenwnenenwsw",
    "eneseneswsenweeseseeweseseeswsee",
    "seesesesesewseseseenesese",
    "nwenwnenwwnwsweswnwnwwwswwnwnenwwne",
    "wsenewswsenwneseswwnesewneenwwnwse",
    "newwwnwwswwenwwwesewwwwwwwnw",
    "eeweswneswneswenweewnesewsenwswnww",
    "nenweswseswswswneseswswswswnwswsesw",
    "wwewswwnwnwwnenweneswnwweseww",
    "wseweseseseseseswseseseseneesenesese",
    "swwswswswswnwwswswswweswwswseswswne",
    "nenwnwenenweseseseneweneeweeneesene",
    "seseseseswseseeseswseeseseswsenwsenwsw",
    "swseswswswseswnwseseseeswswsesesesewne",
    "wswswswswswwswswnwswwwswsenenweew",
    "nenwnwneneewenwnewneswweswnesw",
    "seeeeweeeeeeneesesesee",
    "swneneswswnwseneswswswsenwswwsweswenwsw",
    "swseeeeswneneesenwnwnwseeseeswnwsewsw",
    "wenwnwnwnwsenwnwwswwnwnewnwsenwswnwse",
    "seeeswsesesenwsesesewsesesenwesesenwse",
    "swenwseswseseswseneswswswswswseeswwwsw",
    "nenwneneeesweeneseeneneeneneeswe",
    "eswsweswwswswswswswwwnwweswswswsw",
    "nenwneeenenwswewneswswenee",
    "swswwswwwnwnwsenwneswwseswwswsenee",
    "eswsesweswswsewsenwewsweswwesenw",
    "wnenwnwwsenewnwewenwnwwnwsesenwsw",
    "eneeneeneeeneeenwwnesweneeeswe",
    "swsweswswswswswswnwswswsenwswsw",
    "nenwnwnenenenwnwnwnwnwsw",
    "seweseneeeeeseneesweesesewenw",
    "enwwwnwweswwenwweswwenwswwswwnw",
    "nwswnwneneneneneswwnwnenenenesenenenenenw",
    "nenwnenwswswneneenwswneneneneneswswnenene",
    "nwwseneseseeseseswseesesesewsesenesese",
    "seneseseseswneseseseswseswseswsesenenenw",
    "seeswseswseswswswswswseeswswswnesewsenw",
    "newneneneeeneneene",
    "eeeseeweeeeenweesenweeesw",
    "swneswswsesewswneswwseswseswneswswsesese",
    "nwseswnewswswnenwenewnenenwnesene",
    "wsenewswwwwwwewwwwwwwnwnew",
    "eseeeswsewwewnenwsesenewenwsenee",
    "newswwswwweswwsewnenwnweseswene",
    "sesesewwseseswneseswnesesenwsesenwesese",
    "enwenwnwnwnwnwnwewnwnwnwwsenenwnwnww",
    "wnenwnenwswnesesenenenenenenenenewne",
    "sesweseenenwnwseneeesweswseswwnwse",
    "wswneneeseneweneseweswnenwnwwnwee",
    "nwnwnwwwsewwwwnwwwewwnwwsew",
    "weenwnwnwnwwsewnwnwenwwwwnwww",
    "eesweeeenwseesewseesenweesee",
    "nwnenenwnewnwnwsenwenwsenwnwnenwnenwnw",
    "enweeeeeeseneeeweeeeeesw",
    "seswsesenewnesewnwneswnenenewwnwenw",
    "wswwswswwswswswswneswswswneswswswswe",
    "seseseeesenwesesese",
    "swswswswswseswswswneswwnwswswseneeswswsw",
    "wnewwewwswnwwwneseweswswseww",
    "seeeneneesewsewseenesenwwweneseswse",
    "neswswswswseswnwswseswswswswswswswnwswsw",
    "wseswsenenenenenwneneneenwnwnwnenenenewne",
    "wwswwwwnwenwnwnwnwwnwnw",
    "sesenwsewwswsesesesesesesenenesweseseew",
    "esenenewnenesenesenwnwseswneenewwwne",
    "ewseswseswseswwwsenenwswseesesesesw",
    "swseseseseneseeswseewswseneeeenesese",
    "ewneswnenwswwswwwsew",
    "eewwnwnwwnenenenwnwnenwswnwseneenenw",
    "wswwnewwwwswwwwswswwwne",
    "neswnewnenewswneneneenwnenenwe",
    "sweeneeeeeeweseeesenweseese",
    "seswsenwseeseswseeseewsenwwweswsese",
    "nweenwnwwnwnwsenwnwnwnenwsewnwnwnwwwe",
    "ewnewneeesweswwswswwwww",
    "wwswwsewnewswswwewwenesewwwww",
    "sesweseesewswswseswseneswseseseswnwse",
    "wwswnwwswewwseswswwweew",
    "eesewneneneneneseswseneeenenenwwwse",
    "neenwnwnenenwnenwswnene",
    "seseseseswswsweswenwsewseswswswsenwsw",
    "swswnwswswneswswewswswswswwenwswnwswe",
    "eeseeeeeeeesesenwenewseseew",
    "eswseseeswnwwseseseswsesesenesesewseswse",
    "swneseswswesenewwwswenenwwswwwsesw",
    "nwwnwnwnewswnwwwenwwwsenwnwnwwnw",
    "swnwnwnwnwnenwnwnwseeeswwnwnwnenenenw",
    "nenwnenenesenesenenwneenewneneswnenene",
    "seseewseseseeeseeseseeewneese",
    "eneeneeeseewewnwseneneesweswe",
    "sesenweeseseneesweseeeeseeenwsesw",
    "nwnwnwnwsenwnenenesewnenenweneswnenwnww",
    "nwnenenewneeneenwneenweneswnewsww",
    "neseseneseseswwswsese",
    "nwenenwnenweseneswnwnwwnenwnenwnenene",
    "neeeeseneneeeneeneenw",
    "nwswnwnwnenwnwnwwsenwnwwnenwsewnwnww",
    "enwnwwwnweswneswnesesenenenwnwnwnew",
    "seswwnwsewwwwswneeswwwwwsenewnw",
    "wwwwwwnenwewwwnwwnwsenwnwnwwsese",
    "neswseewnwnenwwswsenwwnwnwneseneseee",
    "eesweseswswsenwnwnwnesw",
    "nwnwnwnesenwnwnwwneenwnwwnwnwne",
    "weeesweseswewenesenwnweseneenw",
    "enesewesweswnenwswnwwseeseneeseee",
    "sesenwnwseswseswswsenwneesew",
    "nwnwnewnwnwnewswnwwwwewnwnwnwsenw",
    "nwnwseneswnenwnenenwnenwnenenwnw",
    "wswsewwswnewswsewswwwneswnwneswswsw",
    "seneseneenwseeneneenenenenenewweww",
    "swswseswnwswswseswne",
    "seneswsewswseswenesenenweenwesesenwse",
    "nenenwnenwsenwnwsenwnwnwwnwnwwnwnesenwnwnw",
    "wwnwwwnwnwnwnweswnwsew",
    "wneswwwnenwwswseseswwnenewswwswse",
    "swswswswswswweewsw",
    "wwwnewseewswnewswswswswneeenwwsw",
    "sewsesweseseswseesesesenesewwnwswwnee",
    "swswnenwswswswswseswswswswsweswswswsw",
    "ewwwwwwwwwsenwewwswwsewnenw",
    "sweswswnweenwnwnwnwnwnwweewswnwenwnw",
    "eeeenweeseeenesenenwwnwseswweesw",
    "swwseseswnenwswswwswnwnwseseeneewsesw",
    "sesenwseeneseeseswswsesewseseneseseswsw",
    "nwswswswewswswnwswswswseswsww",
    "eseswsenwswswswseswswswswswneswsw",
    "esewnweeweeswnw",
    "sweneweenwsenewnwseswnenenwnwwnese",
    "ewnewneswsesesweneneneenwsw",
    "swwwwnwswwseswwneseswnwwsewwwww",
    "neenwnenenenwsewsewnwwnwwsenesenenwnw",
    "swwneswenwwswseseeswseneneseswwseseswsw",
    "nwneswsenwseenwwnwnwnwnwwnwnwnwnwnw",
    "wwnwswnwsewwwnwwwewwenwsenwwe",
    "sweseseeeseseeeeseeneeesenw",
    "weweeeeseeneseeeeeeewseee",
    "wswswewnesewwwswwwwwnewnwwe",
    "seeeseseseseeseswseseenenwseswwsesee",
    "eswseswnwneseswswswswsw",
    "neneseenwnenenenweseneeeeeseneew",
    "swnenwnwsenewnenewsenwneseseseswwswne",
    "seseseseseseseseswsewneseswwsesesenese",
    "enwwnesewsenesenwenenwneseesenenwneswse",
    "senwnenwwnwnwwnweneswsenenwswswnwenesese",
    "seswseseseseseesesenwseesesesese",
    "eeeeswneeenwweeesenee",
    "nwwnwseewnwwwwww",
    "neenenwneneneswenwneeseswnwnwneseswne",
    "swseseseseseseseesenwsw",
    "wnwseswewswswneesenwsenwseseeenesesw",
    "nwswnwnwenwnwswnwenwwenwwnwswwweenw",
    "wweweeseeseeeseeneeeeneee",
    "seweeswnwsweeeeseeeswenwneewe",
    "seswseswswsewswswneseswsw",
    "wweseneswseseeseseenwswseseeseneneee",
    "wsenenwwswnwwseesenweswwnwnwnwenwnw",
    "sweswnwswenweeswnwswswwwwswswenesw",
    "seseseesewseneseeseseneesewswseewe",
    "swneswswseswsweswswwswwswswnwne",
    "nwneneseneneseswswenenenwnewneneneneene",
    "seseswswnewneseseswseseeswneswwswswwese",
    "nwswnwnwewsenwnenewwwswewnwwww",
    "newnwseseneswwwnewsweewwseesene",
    "wwwwnewwwwnwswswenewenwsenesww",
    "senenwneeneeeenwesw",
    "swnenenwswswnweneswswswnwesewsenwswswsw",
    "nwnwnwsenenwnenwnwwnwnwnwsewwnwenenw",
    "seswnewswswneswwewswswwswwswwwsww",
    "swnwesewwswswswwswnwneswswse",
    "swseswwwwnewwwswww",
    "wswneneneseswnwnenweswenwnwnenesesewnenw",
    "wewwneenenwnwnwsenwseswswswsewseenee",
    "swenwnwneenwnwnwnwswnwnwswnwnwnwnwnwnwnw",
    "nwnwsenenenwnenenenenenenwnenene",
    "wnweeeeseseseenwseswnwsesesesesesene",
    "wneswseseswseeeseseeseneneeseeee",
    "neneneswnewnwwswneswnwneneneneseenesw",
    "wswnwneewwswwewwnwnww",
    "ewnwwnwnenwnwnwwwswwwsewenwww",
    "seswseseseswswswneswswswsw",
    "seneseesesenwswseseseseeseseewsewsese",
    "neswwseswnwwseswneseswswwnwseeenenese",
    "nwnenwnwnwwsenwnenwnwnenwseseswsenwswnew",
    "nwnwnwseenesenwneneenwewnwswswnenwnenw",
    "wnwnwwseswnesweneneeswswsw",
    "sesenwseneeweeseeswenwseswseeseswsee",
    "nwswnwsenwneswnwneeewnweswnwwswnwnw",
    "nenwnwnwsenewsenwnesewsenesenwnenenenw",
    "esewswseseseswsenwsenweswsesewnwsene",
    "eenwneweswwsweeneeeneneneseese",
    "swswwswseswswswswswnwswswwseneeneswswsw",
    "nwewseeeseeseeseseseneenwseesw",
    "eseseeesenwseseesesesewesenewesewne",
    "nwnwswnwnwwwnwewwnwwnenw",
    "nwnwsenwwwnesenwnwnwsewnwnwnwnwnenwnwnw",
    "eeeeeeewwseeewseenwswsenwnene",
    "wsesewswswneswswwswswnwnwswesweww",
    "sewsewswwnenwswseswswswneswsenwseesw",
    "enwnewnwswseseneswnweneenwswnenwnwwse",
    "swneneenweeenenesweneswneneswneene",
    "nwsenwnwnwnewnenenwnwnwsenenwnwnenwwne",
    "nwnwwnwwnwnwenwenwwnwseswnwnwewwnw",
    "senwseeswseseeweswwsweseeneneneene",
    "nwswneenwnwenenenwswseseeswseenenenene",
    "seeeweneseeseee",
    "eswwneswwsweesenwsesewenwse",
    "eenenewnewnenwneneneeeneseneseneese",
    "ewseseswswenewwseswse",
    "seseeseeesweseseeeseseeeneswnww",
    "nwnwweswewsenwnenenwswnwneesenwwswnene",
    "eeeeenwwseeeseeweweeeseenw",
    "eswnenewswseeswsenwseswswsewswswneswsw",
    "wewsewsewwnwnwewwnenwwwwwwswse",
    "nwneneswswneweew",
    "eeeseseswseesewsenewenwseneneweese",
    "esesesesesesesenwseseesesw",
    "enenewnesweneneenenenene",
    "seneswnenwnwnenenenee",
    "swswseswswwswwseeswnwswnwswswneswswsw",
    "nenwnwnwnenwnenwswnwnwneneenwnene",
    "seseswswsenwesesenwseswnwswseseseswnwseswe",
    "senenwsesesewwsweseseswneswseswsewswsesw",
    "enweswswneseeeenwsweeeeseene",
    "nenwneswnenwenenenenwnwswnenwwenesenw",
    "eneewneswenenenwweseweseeneenenw",
    "swseeswnwswweneeswnwswswwwswneswnw",
    "sweeswswswswswswswswseseseswnwswenwwsesw",
    "nenwwwwwnwswwneswesewnewswwwe",
    "neenewnewneeeseneeneeeswnwwnene",
    "eswswnwswswseswnenwseswswsesenenwsesewnwse",
    "swnwnweneeeneeeneneswwwene",
    "swswwswsewneswswwswwwnwsweswnwwsesw",
    "sewseewswswseesesesenwwnesenwseese",
    "nwswsenwnesweneeenenenenenenenenenenw",
    "eeseenwseesewnweeeneeseeewe",
    "nwnwswswnwnewwnewswnwnwenwwnwnwwnw",
    "wswswseneswwnenwswwwneswneswswseswsw",
    "enesenwsweeeesweeenw",
    "nwsweeeeneeeneeswseeeeewneew",
    "eswweseeneneneweenwenesweswewe",
    "nwsesenwewwnewnwnwnwnwwneswnwewwwe",
    "swswwwswnweswswseswswwwswswnewswsw",
    "neneweeweeneswsweeeeenweeee",
    "senenenenenenenenwnwswnese",
    "nwswwnwnwnwnwwnwsenenwnwnwenenwnwnenwnw",
    "eneweesesweswnweweeeeseesesenese",
    "seweneeneeewwneseenenee",
    "nwnwnwwnenwseswnwnwwewwse",
    "wwsenwwwwwswsewnwswswnewwswsesw",
    "neneneswswseseseeeenweeeeeewesw",
    "sesweneneenweeenesweenenenwnweee",
    "nweswnwneneneneneswswswene",
    "eseeesweenesweneeenwswe",
    "nenwwnenwswwnenwsesesenenewseseeswsesw",
    "senwneweneewnwswsesenwnwnwnwewnwnw",
    "neeswnenwnenwnwnenenenenwwnw",
    "nenwsewneswswswsewseseseeseswneneswse",
    "senenwnenwsenwnwnenenwnwnene",
    "senenenwsewnesewwwesewswswseswswe",
    "swswswnwwswswswswsesesweneswseseswswsenw",
    "seneesenwenewnwsewsesweseeseesew",
    "seseenweseeseseeseseneenwesesesesw",
    "wwewnwwnwswnwwnenwnwnww",
    "wwneswnenewnwneeenwnenenenwnenenwsene",
    "swwswneswwswwwwswweswwswwswesesw",
    "wwwnwwnewswnwnesenwsewwwnwwnww",
    "swwneweswswwwsw",
    "wswswswwneswwwwwwwww",
    "sweeesenwnwenwswe",
    "wswwswsenwswswnwswnesweseswwswswsww",
    "swseswwnwsweswswneswswwswswswseenwsw",
    "swwneeeeeeneenee",
    "neneenenwnenenenwneneneenenwneswneswne",
    "nenwneneseneneneeneeswnwnesenene",
    "swswneswswnwenwseseneswwwswseneenwnwsw",
    "newwwwwsewnwnwsewwww",
    "wnwsenwnwnwnwnwnewnwnwnwnww",
    "seseseneswseseseseseswsesew",
    "seeswsewnwneewnenesewwnwnwnenwsesww",
    "wswnwnwsenewneswswnwseneneneeseeswnwnw",
    "swwswswswewswswnesw",
    "swseswsenesenweswsewwesesenwsenese",
    "eneneeneeneeneeseweswneeewsene",
    "nwseeeeeeswswneeswsenweeeesenee",
    "nwnwenewnwneseneenwsweswswnenenenenw",
    "nenewswewswneeneneeeneneenenenwnew",
    "sewweswnenwswwnwnwewsenenwsewenw",
    "neswneseswswnwseswnwsw",
    "nenwseswnwwswsenwnwwswsenesweseswwsene",
    "swwwwwwswwnwewwwwnewwseww",
    "nwneeseneneneneswneeeswneswnenenwwnwnw",
    "nwwnwwwsewwwnwswnewwswsenenwwnww",
    "nwwnwnwnwswenwwsenewnww",
    "nwnwsenenenenenenenene",
    "neenweenesenwneeneneeswnenenenwswwese",
    "eewweeneneeeeeenwneenesewsesw",
    "swseswnenewswswswsw",
    "swnwewneeswnweseswenwswseeeseeene",
    "wenwneneenwnwsewnwswwsenenwnesenwne",
    "eeeweeseeeneeeeeenweewe",
    "sewnwnwswnwnenwnwnwneenwnwseswnwnwnwnw",
    "wwnenwnwwsenwnwnwwswswnwnwnwnwnwwenw",
    "neseeseeseseswnww",
    "senwsewnweeeseesenwsweeneseseneee",
    "seseeenwwseeseesewsweeseeenee",
    "wwwnwswwsenwwwwwseswnwewswwswse",
    "swnwnwnwnwnwnenwnwnwwenwwsenwnwwnwsww",
    "neseneeeneswneenwnewsweenenenesewne",
    "nwwnenewwswwwnewswsewwenwsesww",
    "seswwwnwnenenewswswww",
    "nwnenwnwsewnwnwswnwnenwnenw",
    "wswswswnesweswswswswsweswswswswswswnw",
    "nwsenwwnwsewnwwnwnwnweneswnwwwnwnww",
    "senwnwnwewnwnenwswnwnwsenwnwnwnwnwnwnw",
    "wweneweswswwewswnewnwwwwnwsewsw",
    "seneeswwwwwwwnwwnwnwsenwwenwswnw",
    "nwnweseeswwsenwnwwsenwewnwnwnwnwwnwe",
    "sewwswweswswewnwswwswneseswseswnw",
    "neswneneneneneenweneneenee",
    "newseseseseswnwesesenenewseseswsesese",
    "swnwsesesesesesesesesesenwseseweswsenese",
    "nwenwswnwneneenesenwnwswnenw",
    "sewsenenweenwswnewsenwsweseseswsenese",
    "swneswnwsweeeswenenwnesweeewe",
    "senwseeenwenenwneeeeneenesw",
    "nenenenweseeswwseneewnwwseeesesw",
]

let input_short = [
    "sesenwnenenewseeswwswswwnenewsewsw",
    "neeenesenwnwwswnenewnwwsewnenwseswesw",
    "seswneswswsenwwnwse",
    "nwnwneseeswswnenewneswwnewseswneseene",
    "swweswneswnenwsewnwneneseenw",
    "eesenwseswswnenwswnwnwsewwnwsene",
    "sewnenenenesenwsewnenwwwse",
    "wenwwweseeeweswwwnwwe",
    "wsweesenenewnwwnwsenewsenwwsesesenwne",
    "neeswseenwwswnwswswnw",
    "nenwswwsewswnenenewsenwsenwnesesenew",
    "enewnwewneswsewnwswenweswnenwsenwsw",
    "sweneswneswneneenwnewenewwneswswnese",
    "swwesenesewenwneswnwwneseswwne",
    "enesenwswwswneneswsenwnewswseenwsese",
    "wnwnesenesenenwwnenwsewesewsesesew",
    "nenewswnwewswnenesenwnesewesw",
    "eneswnwswnwsenenwnwnwwseeswneewsenese",
    "neswnwewnwnwseenwseesewsenwsweewe",
    "wseweeenwnesenwwwswnew",
]

enum Dir {
    case e, se, sw, w, nw, ne
}

extension Dir {
    func coord(from: (Int, Int)) -> (Int, Int) {
        var (x, y) = from

        if self == .e || self == .w {
            x += self == .e ? +1 : -1
        } else {

            if y % 2 == 0  {
                if self == .sw || self == .nw {
                    x -= 1
                }
            } else {
                if self == .se || self == .ne {
                    x += 1
                }
            }

            if self == .se || self == .sw {
                y += 1
            } else {
                y -= 1
            }
        }

        return (x, y)
    }
}

func parse(line: String) -> [Dir] {
    let mapping: [String: Dir] = [
        "e": .e,
        "se": .se,
        "sw": .sw,
        "w": .w,
        "nw": .nw,
        "ne": .ne
    ]

    var result = [Dir]()

    var lastChar: String.Element?
    for ch in line {
        let joined = lastChar == nil ? "\(ch)" : "\(lastChar!)\(ch)"

        if let dir = mapping[joined] {
            result.append(dir)
            lastChar = nil
        } else {
            lastChar = ch
        }
    }

    return result
}

func parse(input: [String]) -> [[Dir]] {
    return input.map { line in parse(line: line) }
}

func tile(input: [Dir]) -> String {
    // Inspired:
    // http://blog.ruslans.com/2011/02/hexagonal-grid-math.html
    // https://github.com/rshest/hexagonal-grid-demo

    var x = 0, y = 0
    for i in input {
        (x, y) = i.coord(from: (x, y))
    }
    return "\(x)_\(y)"
}

func part1(input: [String]) {
    let directions = parse(input: input)

    var blacks = Set<String>()
    for direction in directions {
        let dir = tile(input: direction)

        if blacks.contains(dir) {
            blacks.remove(dir)
        } else {
            blacks.insert(dir)
        }
    }

    print("Black Count: \(blacks.count)")

}

part1(input: input_long)
